---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Cluster:
    Type: String

  DesiredCount:
    Type: Number
    Default: 1

  TargetGroup:
    Type: String

  BuildEnvironment:
    Type: String

  DockerImage:
    Type: String

  ServiceEC2HostPort:
    Type: Number

  MemoryReservationSoft:
    Type: Number
    Default: 400

  TacticaDBHost:
    Type: String

  TacticaDBUser:
    Type: String
    Default: 'tactica'

  TacticaDBPassword:
    Type: String
    NoEcho: true

  TacticaDBName:
    Type: String
    Default: emedic360_tactica

  TacticaDBPort:
    Type: String
    Default: '3306'
  # CFT does not support this yet
  # ServiceDiscoveryArn:
  #   Type: String
  #   Default: arn:aws:servicediscovery:us-west-2:835670608154:service/srv-vvuujzr3whnnuewh

Resources:
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      Policies:
        - PolicyName: 'emiapi-s3access'
          PolicyDocument:
            Statement:
              - Action: 's3:*'
                Effect: 'Allow'
                Resource: '*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${AWS::StackName}

  EC2Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition

      # CFT does not support this yet (Sep 4 2018)
      # ServiceRegistries:
      #   - RegistryArn: !Ref ServiceDiscoveryArn
      #     ContainerPort: 80
      #     ContainerName: !Sub emiappi-${BuildEnvironment}

      LoadBalancers:
        - ContainerName: !Sub emiappi-${BuildEnvironment}
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-emiappi-${BuildEnvironment}
      RequiresCompatibilities:
        - EC2
      TaskRoleArn: !Ref TaskExecutionRole
      ContainerDefinitions:
        - Name: !Sub emiappi-${BuildEnvironment}
          Image: !Ref DockerImage
          Essential: true
          MemoryReservation: !Ref MemoryReservationSoft
          Environment:
            - Name: NODE_ENV
              Value: !Ref BuildEnvironment
            - Name: PORT
              Value: 80
            - Name: TACTICA_DB_HOST
              Value: !Ref TacticaDBHost
            - Name: TACTICA_DB_USER
              Value: !Ref TacticaDBUser
            - Name: TACTICA_DB_PASSWORD
              Value: !Ref TacticaDBPassword
            - Name: TACTICA_DB_NAME
              Value: !Ref TacticaDBName
            - Name: TACTICA_DB_PORT
              Value: !Ref TacticaDBPort
          PortMappings:
            - ContainerPort: 80
              HostPort: !Ref ServiceEC2HostPort
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AWS::StackName

Outputs:
  Service:
    Value: !Ref EC2Service
